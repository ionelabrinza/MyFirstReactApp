[{"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"2","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"3","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"4","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"5","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"6","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"7","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"8","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"9","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"10","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"11","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"12","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"13","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"14","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"15","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"17","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"18","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"19","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"20","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"21","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"22","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js":"23","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js":"24","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"25"},{"size":717,"mtime":1646968690988,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1646599498864,"results":"28","hashOfConfig":"27"},{"size":651,"mtime":1647589047971,"results":"29","hashOfConfig":"27"},{"size":4338,"mtime":1648673183698,"results":"30","hashOfConfig":"27"},{"size":2325,"mtime":1648275333896,"results":"31","hashOfConfig":"27"},{"size":4977,"mtime":1647586474417,"results":"32","hashOfConfig":"27"},{"size":7750,"mtime":1648282522707,"results":"33","hashOfConfig":"27"},{"size":1242,"mtime":1646977630811,"results":"34","hashOfConfig":"27"},{"size":1952,"mtime":1646973705231,"results":"35","hashOfConfig":"27"},{"size":1931,"mtime":1648318119674,"results":"36","hashOfConfig":"27"},{"size":11120,"mtime":1648673212989,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1646977632644,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1646977637971,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1646977643766,"results":"40","hashOfConfig":"27"},{"size":4586,"mtime":1648674038705,"results":"41","hashOfConfig":"27"},{"size":816,"mtime":1648189426465,"results":"42","hashOfConfig":"27"},{"size":624,"mtime":1648188538350,"results":"43","hashOfConfig":"27"},{"size":661,"mtime":1648319560999,"results":"44","hashOfConfig":"27"},{"size":582,"mtime":1648278673516,"results":"45","hashOfConfig":"27"},{"size":706,"mtime":1648276505449,"results":"46","hashOfConfig":"27"},{"size":6218,"mtime":1648671585284,"results":"47","hashOfConfig":"27"},{"size":604,"mtime":1648319576525,"results":"48","hashOfConfig":"27"},{"size":235,"mtime":1648188594992,"results":"49","hashOfConfig":"27"},{"size":170,"mtime":1648189302433,"results":"50","hashOfConfig":"27"},{"size":50,"mtime":1648273498437,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"rcfftd",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["107","108"],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["109","110","111"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, Label, ModalBody, ModalHeader  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n         \r\n    }\r\n\r\n    render(){\r\n        return(\r\n        \r\n        <React.Fragment>\r\n             <Button outline onClick={this.toggleModal}>\r\n                    <i className=\" fa fa-pencil fa-lg\"></i> Submit Comment\r\n            </Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                        <div className=\"form-group\">\r\n                            <Label htmlFor=\"rating\">Rating</Label>\r\n                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                           className=\"form-control\"> Rating\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                             </Control.select>\r\n                         </div>\r\n                         <div className=\"form-group\">\r\n                             <Label htmlFor=\"author\">Your Name</Label>\r\n                             <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                            />\r\n                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                            />\r\n                            </div>\r\n                            <div>\r\n                            <Label htmlFor=\"text\">Comment</Label>\r\n                            <Control.textarea model=\".text\" id=\"text\" name=\"text\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                             <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </div>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>        \r\n        )\r\n    }\r\n\r\n}\r\n\r\n  function RenderCampsite({campsite}) {\r\n    return (\r\n        <div className=\"col-md-5 m-1\"> \r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                    <CardBody> \r\n                        <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform> \r\n        </div>\r\n       )\r\n    }\r\n\r\n function RenderComments({comments, postComment, campsiteId}) {\r\n     if (comments) {\r\n         return(\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>\r\n                    Comments\r\n                </h4>\r\n                <Stagger in>\r\n                     {comments.map(comment => {\r\n                         return (\r\n                             <Fade in key={comment.id}>\r\n                             <div >\r\n                                {comment.text}\r\n                                 <p>--{comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                 </p>\r\n                             </div>\r\n                            </Fade>\r\n                       );\r\n                    })}\r\n                </Stagger>\r\n                <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n            </div>)\r\n        }\r\n\r\n    }\r\n\r\n  function CampsiteInfo(props) {\r\n      if (props.isLoading) {\r\n          return (\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n              </div>\r\n          );\r\n      }\r\n\r\n      if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col\">\r\n                     <h4>{props.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        );\r\n      }\r\n\r\n        if (props.campsite) {\r\n             return  (\r\n                 <div className=\"container\">\r\n                    <div className=\"row\">\r\n                         <div className=\"col\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                             <h2>{props.campsite.name}</h2>\r\n                             <hr />\r\n                          </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderCampsite campsite={props.campsite} />\r\n                        <RenderComments \r\n                             comments={props.comments}\r\n                             postComment={props.postComment} \r\n                             campsiteId={props.campsite.id}\r\n                        />\r\n                    </div>\r\n                 </div>\r\n                \r\n            );\r\n        } \r\n             return <div />  \r\n        \r\n    }     \r\n\r\nexport default CampsiteInfo;","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],["112","113"],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["114","115","116","117","118","119","120"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\nButton, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType:'By Phone',\r\n            feedback:'',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values);\r\n    }\r\n\r\n    render() {\r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    <h2>Contact Us</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content align-items-center\">\r\n                <div className=\"col-sm-4\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        1 Nucamp Way<br />\r\n                        Seattle, WA 98001<br />\r\n                        U.S.A.\r\n                    </address>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                     />\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n\r\n                                        }}\r\n                                    />\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n\r\n                                        }}\r\n                                    />  \r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                        />                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n\r\n                                        }}\r\n                                    />\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                        />   \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                           className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n     );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",["121"],"import * as ActionTypes from \"./ActionTypes\";\r\nimport { PARTNERS } from '../shared/partners';\r\n\r\nexport const Partners =\r\n(state = { isLoading:true, errMess: null, partners: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PARTNERS: \r\n            return {...state, isLoading: false, errMess: null, partners: action.payload,};\r\n        case ActionTypes.PARTNERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, partners: [] };\r\n        case ActionTypes.PARTNERS_FAILED:  \r\n            return { ...state, isLoading: false, errMess: action.payload };  \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js",[],"C:\\Users\\Nicoleta\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":48,"column":29,"nodeType":"128","messageId":"129","endLine":49,"endColumn":69},{"ruleId":"126","severity":1,"message":"130","line":59,"column":30,"nodeType":"128","messageId":"129","endLine":67,"endColumn":31},{"ruleId":"126","severity":1,"message":"131","line":82,"column":29,"nodeType":"128","messageId":"129","endLine":85,"endColumn":39},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","replacedBy":"133"},{"ruleId":"126","severity":1,"message":"130","line":81,"column":37,"nodeType":"128","messageId":"129","endLine":89,"endColumn":40},{"ruleId":"126","severity":1,"message":"130","line":106,"column":37,"nodeType":"128","messageId":"129","endLine":115,"endColumn":39},{"ruleId":"126","severity":1,"message":"130","line":132,"column":37,"nodeType":"128","messageId":"129","endLine":142,"endColumn":39},{"ruleId":"126","severity":1,"message":"130","line":160,"column":37,"nodeType":"128","messageId":"129","endLine":168,"endColumn":39},{"ruleId":"126","severity":1,"message":"134","line":185,"column":45,"nodeType":"128","messageId":"129","endLine":189,"endColumn":47},{"ruleId":"126","severity":1,"message":"127","line":195,"column":37,"nodeType":"128","messageId":"129","endLine":196,"endColumn":69},{"ruleId":"126","severity":1,"message":"131","line":205,"column":37,"nodeType":"128","messageId":"129","endLine":208,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":18},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["139"],["140"],"Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'PARTNERS' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]